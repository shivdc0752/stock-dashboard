{
  "version": 3,
  "sources": ["../../chartjs-chart-financial/dist/chartjs-chart-financial.esm.js"],
  "sourcesContent": ["/*!\n * @license\n * chartjs-chart-financial\n * http://chartjs.org/\n * Version: 0.2.1\n *\n * Copyright 2024 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-chart-financial/blob/master/LICENSE.md\n */\nimport { BarElement, Chart, BarController, defaults as defaults$1 } from 'chart.js';\nimport { valueOrDefault, isNullOrUndef, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {Rectangle} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'low', 'high', 'width', 'height'], useFinalPosition);\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base); // use min because 0 pixel at top of screen\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const bounds = !bar || (skipX && skipY) ? false : getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nclass FinancialElement extends BarElement {\n\n  static defaults = {\n    backgroundColors: {\n      up: 'rgba(75, 192, 192, 0.5)',\n      down: 'rgba(255, 99, 132, 0.5)',\n      unchanged: 'rgba(201, 203, 207, 0.5)',\n    },\n    borderColors: {\n      up: 'rgb(75, 192, 192)',\n      down: 'rgb(255, 99, 132)',\n      unchanged: 'rgb(201, 203, 207)',\n    }\n  };\n\n  height() {\n    return this.base - this.y;\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, low, high} = this.getProps(['x', 'low', 'high'], useFinalPosition);\n    return {\n      x,\n      y: (high + low) / 2\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {x, open, close} = this.getProps(['x', 'open', 'close'], useFinalPosition);\n    return {\n      x,\n      y: (open + close) / 2\n    };\n  }\n}\n\nconst defaults = Chart.defaults;\n\nclass OhlcElement extends FinancialElement {\n  static id = 'ohlc';\n\n  static defaults = {\n    ...FinancialElement.defaults,\n    lineWidth: 2,\n    armLength: null,\n    armLengthRatio: 0.8\n  };\n\n  draw(ctx) {\n    const me = this;\n\n    const {x, open, high, low, close} = me;\n\n    const armLengthRatio = valueOrDefault(me.armLengthRatio, defaults.elements.ohlc.armLengthRatio);\n    let armLength = valueOrDefault(me.armLength, defaults.elements.ohlc.armLength);\n    if (armLength === null) {\n      // The width of an ohlc is affected by barPercentage and categoryPercentage\n      // This behavior is caused by extending controller.financial, which extends controller.bar\n      // barPercentage and categoryPercentage are now set to 1.0 (see controller.ohlc)\n      // and armLengthRatio is multipled by 0.5,\n      // so that when armLengthRatio=1.0, the arms from neighbour ohcl touch,\n      // and when armLengthRatio=0.0, ohcl are just vertical lines.\n      armLength = me.width * armLengthRatio * 0.5;\n    }\n\n    if (close < open) {\n      ctx.strokeStyle = valueOrDefault(me.options.borderColors ? me.options.borderColors.up : undefined, defaults.elements.ohlc.borderColors.up);\n    } else if (close > open) {\n      ctx.strokeStyle = valueOrDefault(me.options.borderColors ? me.options.borderColors.down : undefined, defaults.elements.ohlc.borderColors.down);\n    } else {\n      ctx.strokeStyle = valueOrDefault(me.options.borderColors ? me.options.borderColors.unchanged : undefined, defaults.elements.ohlc.borderColors.unchanged);\n    }\n    ctx.lineWidth = valueOrDefault(me.lineWidth, defaults.elements.ohlc.lineWidth);\n\n    ctx.beginPath();\n    ctx.moveTo(x, high);\n    ctx.lineTo(x, low);\n    ctx.moveTo(x - armLength, open);\n    ctx.lineTo(x, open);\n    ctx.moveTo(x + armLength, close);\n    ctx.lineTo(x, close);\n    ctx.stroke();\n  }\n}\n\n/**\n * This class is based off controller.bar.js from the upstream Chart.js library\n */\nclass FinancialController extends BarController {\n\n  static overrides = {\n    label: '',\n\n    parsing: false,\n\n    hover: {\n      mode: 'label'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'open', 'high', 'low', 'close']\n      }\n    },\n\n    scales: {\n      x: {\n        type: 'timeseries',\n        offset: true,\n        ticks: {\n          major: {\n            enabled: true,\n          },\n          source: 'data',\n          maxRotation: 0,\n          autoSkip: true,\n          autoSkipPadding: 75,\n          sampleSize: 100\n        },\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n\n    plugins: {\n      tooltip: {\n        intersect: false,\n        mode: 'index',\n        callbacks: {\n          label(ctx) {\n            const point = ctx.parsed;\n\n            if (!isNullOrUndef(point.y)) {\n              return defaults$1.plugins.tooltip.callbacks.label(ctx);\n            }\n\n            const {o, h, l, c} = point;\n\n            return `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n          }\n        }\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const me = this;\n    const parsed = me.getParsed(index);\n    const axis = me._cachedMeta.iScale.axis;\n\n    const {o, h, l, c} = parsed;\n    const value = `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n\n    return {\n      label: `${me._cachedMeta.iScale.getLabelForValue(parsed[axis])}`,\n      value\n    };\n  }\n\n  getUserBounds(scale) {\n    const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n\n  /**\n   * Implement this ourselves since it doesn't handle high and low values\n   * https://github.com/chartjs/Chart.js/issues/7328\n   * @protected\n   */\n  getMinMax(scale) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const axis = meta.iScale.axis;\n    const otherScale = this._getOtherScale(scale);\n    const {min: otherMin, max: otherMax} = this.getUserBounds(otherScale);\n\n    if (_parsed.length < 2) {\n      return {min: 0, max: 1};\n    }\n\n    if (scale === meta.iScale) {\n      return {min: _parsed[0][axis], max: _parsed[_parsed.length - 1][axis]};\n    }\n\n    const newParsedData = _parsed.filter(({x}) => x >= otherMin && x < otherMax);\n\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    for (let i = 0; i < newParsedData.length; i++) {\n      const data = newParsedData[i];\n      min = Math.min(min, data.l);\n      max = Math.max(max, data.h);\n    }\n    return {min, max};\n  }\n\n  /**\n   * @protected\n   */\n  calculateElementProperties(index, ruler, reset, options) {\n    const me = this;\n    const vscale = me._cachedMeta.vScale;\n    const base = vscale.getBasePixel();\n    const ipixels = me._calculateBarIndexPixels(index, ruler, options);\n    const data = me.chart.data.datasets[me.index].data[index];\n    const open = vscale.getPixelForValue(data.o);\n    const high = vscale.getPixelForValue(data.h);\n    const low = vscale.getPixelForValue(data.l);\n    const close = vscale.getPixelForValue(data.c);\n\n    return {\n      base: reset ? base : low,\n      x: ipixels.center,\n      y: (low + high) / 2,\n      width: ipixels.size,\n      open,\n      high,\n      low,\n      close\n    };\n  }\n\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const rects = me._cachedMeta.data;\n    clipArea(chart.ctx, chart.chartArea);\n    for (let i = 0; i < rects.length; ++i) {\n      rects[i].draw(me._ctx);\n    }\n    unclipArea(chart.ctx);\n  }\n\n}\n\nclass OhlcController extends FinancialController {\n  static id = 'ohlc';\n\n  static defaults = {\n    ...FinancialController.defaults,\n    dataElementType: OhlcElement.id,\n    datasets: {\n      barPercentage: 1.0,\n      categoryPercentage: 1.0\n    }\n  };\n\n  updateElements(elements, start, count, mode) {\n    const reset = mode === 'reset';\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const options = sharedOptions || this.resolveDataElementOptions(i, mode);\n\n      const baseProperties = this.calculateElementProperties(i, ruler, reset, options);\n\n      if (includeOptions) {\n        baseProperties.options = options;\n      }\n      this.updateElement(elements[i], i, baseProperties, mode);\n    }\n  }\n\n}\n\nclass CandlestickElement extends FinancialElement {\n  static id = 'candlestick';\n\n  static defaults = {\n    ...FinancialElement.defaults,\n    borderWidth: 1,\n  };\n\n  draw(ctx) {\n    const me = this;\n\n    const {x, open, high, low, close} = me;\n\n    let borderColors = me.options.borderColors;\n    if (typeof borderColors === 'string') {\n      borderColors = {\n        up: borderColors,\n        down: borderColors,\n        unchanged: borderColors\n      };\n    }\n\n    let borderColor;\n    if (close < open) {\n      borderColor = valueOrDefault(borderColors ? borderColors.up : undefined, defaults$1.elements.candlestick.borderColors.up);\n      ctx.fillStyle = valueOrDefault(me.options.backgroundColors ? me.options.backgroundColors.up : undefined, defaults$1.elements.candlestick.backgroundColors.up);\n    } else if (close > open) {\n      borderColor = valueOrDefault(borderColors ? borderColors.down : undefined, defaults$1.elements.candlestick.borderColors.down);\n      ctx.fillStyle = valueOrDefault(me.options.backgroundColors ? me.options.backgroundColors.down : undefined, defaults$1.elements.candlestick.backgroundColors.down);\n    } else {\n      borderColor = valueOrDefault(borderColors ? borderColors.unchanged : undefined, defaults$1.elements.candlestick.borderColors.unchanged);\n      ctx.fillStyle = valueOrDefault(me.backgroundColors ? me.backgroundColors.unchanged : undefined, defaults$1.elements.candlestick.backgroundColors.unchanged);\n    }\n\n    ctx.lineWidth = valueOrDefault(me.options.borderWidth, defaults$1.elements.candlestick.borderWidth);\n    ctx.strokeStyle = borderColor;\n\n    ctx.beginPath();\n    ctx.moveTo(x, high);\n    ctx.lineTo(x, Math.min(open, close));\n    ctx.moveTo(x, low);\n    ctx.lineTo(x, Math.max(open, close));\n    ctx.stroke();\n    ctx.fillRect(x - me.width / 2, close, me.width, open - close);\n    ctx.strokeRect(x - me.width / 2, close, me.width, open - close);\n    ctx.closePath();\n  }\n}\n\nclass CandlestickController extends FinancialController {\n\n  static id = 'candlestick';\n\n  static defaults = {\n    ...FinancialController.defaults,\n    dataElementType: CandlestickElement.id\n  };\n\n  static defaultRoutes = BarController.defaultRoutes;\n\n  updateElements(elements, start, count, mode) {\n    const reset = mode === 'reset';\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const options = sharedOptions || this.resolveDataElementOptions(i, mode);\n\n      const baseProperties = this.calculateElementProperties(i, ruler, reset, options);\n\n      if (includeOptions) {\n        baseProperties.options = options;\n      }\n      this.updateElement(elements[i], i, baseProperties, mode);\n    }\n  }\n\n}\n\nexport { CandlestickController, CandlestickElement, OhlcController, OhlcElement };\n"],
  "mappings": "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",
  "names": ["defaults"]
}
